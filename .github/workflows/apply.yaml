name: Apply Plan
on:
  release:
    types: [released]
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  AWS_REGION: "us-west-1"
  AWS_ROLE: "arn:aws:iam::270074865685:role/terraform-module-ci-test"

# GitHub will remove any cache entries that have not been accessed in over 7 days.
# There is no limit on the number of caches you can store, but the total size of all caches in a repository is limited to 10 GB.
# If you exceed the limit, GitHub will save the new cache but will begin evicting caches until the total size is less than the repository limit docs.github.com.
# https://www.phind.com/search?cache=uv1bowiqh8zysg6dtr1gm5nq

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: nicknovitski/nix-develop@v1
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{env.AWS_ROLE}}
          role-session-name: ${{github.job}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
          aws-region: ${{env.AWS_REGION}}
      - run: terraform init
      - name: 'Cache Terraform'
        uses: actions/cache@v3
        with:
          path: .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-
      - uses: haythem/public-ip@v1.3
        id: ip
      - name: 'Apply changes'
        shell: bash
        run: |
          eval $(ssh-agent -s)
          echo '${{secrets.AGE_SECRET_KEY}}' | age -d -i - -o ssh_key ssh.age
          chmod 0600 ssh_key
          ssh-add ssh_key
          echo '${{secrets.AGE_SECRET_KEY}}' | age -d -i - -o terraform.tfstate terraform.tfstate.age
          export TF_VAR_ip=${{ steps.ip.outputs.ipv4 }}
          terraform init
          terraform apply --auto-approve || true
          rm -rf ssh_key
          rm -rf terraform.tfstate.age
          age -e -r '${{ secrets.AGE_PUBLIC_KEY }}' -o terraform.tfstate.age terraform.tfstate
          rm -f terraform.tfstate
          git config --global user.name 'automation'
          git config --global user.email 'automation@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git add -A
          git commit -s -m "New State ${{github.job}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
          git push origin main
