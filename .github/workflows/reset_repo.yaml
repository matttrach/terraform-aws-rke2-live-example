name: reset_repo
# this is helpful to the maintainer, but not to the user, don't run this!
on:
  # only on dispatch
  workflow_dispatch:

permissions: write-all

env:
  GH_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}

jobs:
  # this workflow destroys the infrastructure and resets the repo to a clean state
  reset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: nicknovitski/nix-develop@v1.1.0
        with:
          arguments: |
            --ignore-environment \
            --extra-experimental-features nix-command \
            --extra-experimental-features flakes \
            --keep HOME \
            --keep SSH_AUTH_SOCK \
            --keep GITHUB_TOKEN \
            --keep AWS_ROLE \
            --keep AWS_REGION \
            --keep AWS_DEFAULT_REGION \
            --keep AWS_ACCESS_KEY_ID \
            --keep AWS_SECRET_ACCESS_KEY \
            --keep AWS_SESSION_TOKEN \
            --keep TERM \
            ${{ github.workspace }}
      # if using OICD auth
      - uses: aws-actions/configure-aws-credentials@v4
        if: ${{vars.AWS_AUTH == 'OIDC'}}
        with:
          role-to-assume: ${{secrets.AWS_ROLE}}
          role-session-name: ${{github.job}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
          aws-region: ${{secrets.AWS_REGION}}
      # if using access key auth
      - uses: aws-actions/configure-aws-credentials@v4
        if: ${{vars.AWS_AUTH == 'IAM'}}
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}
      - uses: actions/cache/restore@v4
        id: cache-terraform-restore
        with:
          path: ${{ github.workspace }}/.terraform
          key: terraform-${{hashFiles('**/versions.tf','**/main.tf')}}
      - run: terraform init -upgrade
      - uses: actions/cache/save@v4
        id: cache-terraform-save
        with:
          path: ${{ github.workspace }}/.terraform
          key: ${{ steps.cache-terraform-restore.outputs.cache-primary-key }}
      # this has to run in the same job as the reset to get the proper information
      - uses: haythem/public-ip@v1.3
        id: ip
      - name: ResetRepo
        shell: bash
        run: |
          git config --global user.name 'automation'
          git config --global user.email 'automation@users.noreply.github.com'
          git remote set-url origin "https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}"
          git pull --rebase

          # decrypt secret files
          while read -r file; do
            if [ -f "$file.age" ]; then
              echo '${{secrets.AGE_SECRET_KEY}}' | age -d -i - -o "$file" "$file.age"
            fi
          done <secret_file_list.txt

          # destroy infra
          for lc in phase_4_servers phase_3_prototype phase_2_ci_access phase_1_project_access; do
            cd ${{github.workspace}}/$lc
            terraform init
            terraform destroy --auto-approve || true
            terraform destroy --auto-approve
            cd ${{github.workspace}}
          done

          # delete secret files and recipients
          while read -r file; do
              rm -f "$file";
              rm -f "$file.age";
          done <secret_file_list.txt
          echo "" > age_recipients.txt

          if [ -n "$(git diff)" ]; then
            git add -A
            git commit -s -m "Reset repo https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" || true
            git push -f origin main || true
          fi
          # remove secrets which effect infra, these will need to be manually added again before setup
          gh secret delete AGE_SECRET_KEY || true
          gh secret delete AWS_ACCESS_KEY_ID || true
          gh secret delete AWS_SECRET_ACCESS_KEY || true

          echo "At this point the repo should be clean, run setup to prepare it again..."
