name: update
on:
  # dispatch only, infra updates also happen when a release pr is approved
  workflow_dispatch:

permissions: write-all

env:
  AWS_REGION: "us-west-1"
  AWS_ROLE: "arn:aws:iam::270074865685:role/terraform-module-ci-test"
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  GITHUB_OWNER: ${{github.repository_owner}}

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          upstream-cache: null
      - uses: nicknovitski/nix-develop@v1.1.0
        with:
          arguments: |
            --ignore-environment \
            --extra-experimental-features nix-command \
            --extra-experimental-features flakes \
            --keep HOME \
            --keep SSH_AUTH_SOCK \
            --keep GITHUB_TOKEN \
            --keep AWS_ROLE \
            --keep AWS_REGION \
            --keep AWS_DEFAULT_REGION \
            --keep AWS_ACCESS_KEY_ID \
            --keep AWS_SECRET_ACCESS_KEY \
            --keep AWS_SESSION_TOKEN \
            --keep TERM \
            ${{ github.workspace }}
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{env.AWS_ROLE}}
          role-session-name: ${{github.job}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}
          aws-region: ${{env.AWS_REGION}}
      - uses: actions/cache/restore@v3
        id: cache-terraform-restore
        with:
          path: ${{ github.workspace }}/.terraform
          key: terraform-${{hashFiles('**/versions.tf','**/main.tf')}}
      - run: terraform init -upgrade
      - uses: actions/cache/save@v3
        id: cache-terraform-save
        with:
          path: ${{ github.workspace }}/.terraform
          key: ${{ steps.cache-terraform-restore.outputs.cache-primary-key }}
      - uses: haythem/public-ip@v1.3
        id: ip
      - name: 'Apply changes'
        shell: bash
        run: |
          if [ ! -f ssh_key ]; then
            echo "encrypted ssh key not found, is the repo configured?"
            exit 1;
          fi
          if [ ! -f age_recipients.txt ]; then
            echo "age_recipients not found, is the repo configured?"
            exit 1;
          fi
          if [ "" = "${{secrets.AGE_SECRET_KEY}}" ]; then
            echo "age secret key not found, is the repo configured?"
            exit 1;
          fi
          if [ ! -f terraform.tfstate.age ]; then
            echo "terraform.tfstate.age not found, is the repo configured?"
            exit 1;
          fi
          eval "$(ssh-agent -s)"
          echo '${{secrets.AGE_SECRET_KEY}}' | age -d -i - -o ssh_key ssh.age
          chmod 0600 ssh_key
          ssh-add ssh_key
          echo '${{secrets.AGE_SECRET_KEY}}' | age -d -i - -o terraform.tfstate terraform.tfstate.age
          export TF_VAR_ip="${{ steps.ip.outputs.ipv4 }}"
          terraform init
          # manage the security group rule for the terraform runner as a separate entity to prevent dependency chain issues with server object
          terraform apply --auto-approve -target=module.aws_rke2_rhel9_rpm.module.aws_access.module.security_group.aws_vpc_security_group_egress_rule.to_ip[0] || true
          terraform apply --auto-approve -target=module.aws_rke2_rhel9_rpm.module.aws_access.module.security_group.aws_vpc_security_group_ingress_rule.from_ip[0] || true
          terraform apply --auto-approve || true
          terraform apply --auto-approve || true
          rm -rf ssh_key
          rm -rf terraform.tfstate.age
          age -e -R age_recipients.txt -o terraform.tfstate.age terraform.tfstate && rm -f terraform.tfstate
          git config --global user.name 'automation'
          git config --global user.email 'automation@users.noreply.github.com'
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{github.repository}}"
          git add ssh.age
          git add terraform.tfstate.age
          git commit -s -m "New State ${{github.job}}-${{github.run_id}}-${{github.run_number}}-${{github.run_attempt}}"
          git push origin main
